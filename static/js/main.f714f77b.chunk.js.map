{"version":3,"sources":["components/App/App.module.css","components/ContactFilter/ContactFilter.module.css","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/ContactFilter/ContactFilter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","ContactForm","state","name","number","handleChange","event","setState","currentTarget","value","handleSubmit","preventDefault","newContact","id","v4","props","onSubmit","this","className","styles","form","label","type","pattern","title","required","onChange","input","button","role","aria-label","icon","Component","connect","dispatch","actions","contacts","filter","target","filteredContacts","toLowerCase","includes","items","handleDelete","contactId","section","length","list","map","contact","item","onClick","notification","App","prevProps","prevState","container","headTitle","createReducer","payload","find","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f714f77b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\",\"headTitle\":\"App_headTitle__1eNzW\",\"title\":\"App_title__1YcTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2Us6J\",\"icon\":\"ContactFilter_icon__-aHW7\",\"input\":\"ContactFilter_input__1RqJv\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add');\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 } from 'uuid';\nimport styles from './ContactForm.module.css';\nimport actions from '../../redux/contacts/contacts-actions';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const newContact = {\n      id: v4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.addContact(newContact);\n    this.setState({ name: '' });\n    this.setState({ number: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={styles.form}>\n          <label className={styles.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <label className={styles.label}>\n            Phone number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <button type=\"submit\" className={styles.button}>\n            Add contact{' '}\n            <span role=\"img\" aria-label=\"green check\" className={styles.icon}>\n              ✅\n            </span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: newContact => dispatch(actions.addContact(newContact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './ContactFilter.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\n\nconst ContactFilter = ({ value, handleChange }) => {\n  return (\n    <div>\n      <label className={styles.label}>\n        <span role=\"img\" aria-label=\"loupe icon\" className={styles.icon}>\n          🔎\n        </span>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleChange: event => dispatch(actions.changeFilter(event.target.value)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport ContactFilter from '../ContactFilter/ContactFilter';\n\nconst ContactList = ({ contacts, handleDelete }) => (\n  <div className={styles.section}>\n    <ContactFilter />\n    {contacts.length ? (\n      <ul className={styles.list}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={styles.item}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n              className={styles.button}\n            >\n              Delete{' '}\n              <span role=\"img\" aria-label=\"delete icon\">\n                ❌\n              </span>\n            </button>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p className={styles.notification}>\n        <span role=\"img\" aria-label=\"sad face icon\">\n          😔\n        </span>{' '}\n        No name in Phonebook\n      </p>\n    )}\n  </div>\n);\n\nContactList.propTypes = {\n  value: PropTypes.string,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  handleChange: PropTypes.func,\n  handleDelete: PropTypes.func,\n};\n\nconst filteredContacts = (contacts, filter) => {\n  return filter\n    ? contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filter.toLowerCase()),\n      )\n    : contacts;\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  return {\n    contacts: filteredContacts(items, filter),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleDelete: contactId => dispatch(actions.deleteContact(contactId)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\n\nclass App extends Component {\n  componentDidMount() {\n    // const contacts = JSON.parse(localStorage.getItem('contacts'));\n    // if (contacts) this.setState({ contacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (contacts !== prevState.contacts) {\n    //   localStorage.setItem('contacts', JSON.stringify(contacts));\n    // }\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1 className={styles.headTitle}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={styles.title}>Contacts</h2>\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) =>\n    !state.find(contact => contact.number === payload.number)\n      ? [...state, payload]\n      : state,\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\nimport App from './components/App/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"icon\":\"ContactForm_icon__1TiGo\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactList_section__3fuU2\",\"button\":\"ContactList_button__1RuFy\",\"input\":\"ContactList_input__3YLqK\",\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"notification\":\"ContactList_notification__3Is9a\"};"],"sourceRoot":""}